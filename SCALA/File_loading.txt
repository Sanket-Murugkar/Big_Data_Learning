import scala.io.Source

val a="/home/vaibhav/dataset/EMP.csv";

for (line <- Source.fromFile(a).getLines())
{
val col= line.split(",");
println(col(0),col(1),col(2))
}




>>>>>>>>>>>>>>>>>>>>> SPARK RDD>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
val a=sc.textFile("/home/vaibhav/dataset/EMP.csv");



val b= a.map(r => r.split(",")).map(r=> (r(2),r(1).toUpperCase)))


b.collect

>>>>>>>>>>Calling Tax Calc Function in RDD >>>>>>>



def taxcalc (salary: Double) :Double=
{

if(salary < 3000)
{
return salary *0.1;

}
if(salary > 3000 & salary < 5000)
{
return salary *0.2;

}

else
{
return salary*0.05
}
salary
}


val a = sc.textFile("/home/vaibhav/dataset/EMP.csv")

val b = a.map(line => line.split(",").map(_.trim))

val header = b.first

val c = b.filter(_(0) != header(0))

val d = c.map(w => (taxcalc(w(7).toInt),w(1)))

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>Word Count Program>>>>>>>>>>>>>>>>>>>>>>>



val p = sc.textFile("/home/vaibhav/Desktop/SCALA/README.txt")

val q = p.flatMap(line => line.split(",")).map(r=>(r,1))

val r = q.reduceByKey(_+_)


>>>>>>>>>>>>>>>>>>>>>>>Remove special char and then wordcount>>>>>>>




val pp = sc.textFile("/home/vaibhav/Desktop/SCALA/README.txt")


val qq = pp.flatMap(line => line.split(",")).map(r=>r.toUpperCase.replaceAll("[^a-zA-Z0-9]","")).map(r=>(r,1))


val rr = qq.reduceByKey(_+_).collect




>>>>>>>>>>>Loading JSON data with SQL Context>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


val a= new org.apache.spark.sql.SQLContext(sc);

val emp = a.read.json("/home/vaibhav/dataset/EMP1.json")

emp.createOrReplaceTempView("e2")

sql("SELECT * FROM e2").show


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



val a= new org.apache.spark.sql.SQLContext(sc);

val emp = a.read.format("com.databricks.spark.csv").option("header","true").option("inferSchema","true").load("/home/vaibhav/dataset/EMP.csv")


emp.createOrReplaceTempView("e2")

sql("SELECT * FROM e2").show

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>










